version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: quay.io/mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: greenhouse-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: greenhouse
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - greenhouse-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend API Server
  backend:
    build:
      context: ./backend-websocket-update
      dockerfile: Dockerfile
    container_name: greenhouse-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/greenhouse?authSource=greenhouse
      - ESP32_AUTH_TOKEN=${ESP32_AUTH_TOKEN}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3001,http://localhost:80}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-10000}
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - greenhouse-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Dashboard
  frontend:
    build:
      context: ./greenhouse-dashboard
      dockerfile: Dockerfile
    container_name: greenhouse-frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:3000}
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - greenhouse-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local

networks:
  greenhouse-network:
    driver: bridge