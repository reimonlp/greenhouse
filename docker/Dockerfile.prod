# Dockerfile para producciÃ³n: build multi-stage

# Stage 1: Build frontend
FROM node:20-alpine AS frontend-builder
WORKDIR /app/frontend
COPY greenhouse-dashboard/package*.json ./
RUN npm ci --prefer-offline --no-audit
COPY greenhouse-dashboard/ ./
RUN npm run build

# Stage 2: Setup backend y servir frontend
FROM node:20-alpine
RUN apk add --no-cache curl bash jq git \
    && rm -rf /var/cache/apk/*
WORKDIR /app/backend
COPY backend-websocket-update/package*.json ./
RUN npm ci --prefer-offline --no-audit --omit=dev
COPY backend-websocket-update/ ./
COPY --from=frontend-builder /app/frontend/dist /app/frontend/dist

# Healthcheck para Express
RUN echo '#!/bin/sh' > /healthcheck.sh && \
    echo 'curl -sf http://localhost:3000/health > /dev/null 2>&1 || exit 1' >> /healthcheck.sh && \
    chmod +x /healthcheck.sh

EXPOSE 3000
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD /healthcheck.sh

LABEL maintainer="Reimon <info@reimon.dev>"
LABEL description="Greenhouse Monitoring System - Express serves Frontend + API (production)"
LABEL version="1.0"
STOPSIGNAL SIGTERM

CMD ["npm", "start"]
